#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
# spark.master                     spark://master:7077
# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer
# spark.driver.memory              5g
# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers="one two three"

spark.redis.host redis5
spark.redis.port 6379
spark.cores.max 4
spark.executor.memory 8g

# ElasticSearch Client Settings
spark.es.nodes.discovery: false

# es.nodes settings describe how the ES client connects to ElasticSearch
# use wan.only true for localhost / haproxy
spark.es.nodes.wan.only: true
spark.es.nodes.data.only: false
spark.es.nodes.client.only: false
spark.es.nodes.ingest.only: false

# spark.es.nodes: localhost
# we use the docker hostname elasticsearch for connection through docker network to the ES cluster
spark.es.nodes: "elasticsearch"
spark.es.port: 9200

# ElasticSearch write configurations
spark.es.batch.size.bytes: "1mb"
spark.es.batch.size.entries: 1000
spark.es.batch.write.refresh: true
spark.es.batch.write.retry.count: 3
spark.es.batch.write.retry.wait: "5s"
